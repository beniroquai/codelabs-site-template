"use strict";(self.webpackChunkuc_2_docs=self.webpackChunkuc_2_docs||[]).push([[8507],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(a),u=i,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||l;return a?n.createElement(h,r(r({ref:t},p),{},{components:a})):n.createElement(h,r({ref:t},p))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var c=2;c<l;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5952:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var n=a(87462),i=(a(67294),a(3905));const l={},r=void 0,o={unversionedId:"ImSwitch/ImSwitchInstallUbuntu",id:"ImSwitch/ImSwitchInstallUbuntu",title:"ImSwitchInstallUbuntu",description:"ImSwitch Installation Ubuntu",source:"@site/docs/04_ImSwitch/ImSwitchInstallUbuntu.md",sourceDirName:"04_ImSwitch",slug:"/ImSwitch/ImSwitchInstallUbuntu",permalink:"/docs/ImSwitch/ImSwitchInstallUbuntu",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Install ImSwitch",permalink:"/docs/ImSwitch/ImSwitchInstall"},next:{title:"ImSwitchInstallWindows",permalink:"/docs/ImSwitch/ImSwitchInstallWindows"}},s={},c=[{value:"ImSwitch Installation Ubuntu",id:"imswitch-installation-ubuntu",level:3},{value:"Step 1: Install Visual Studio Code (VS Code)",id:"step-1-install-visual-studio-code-vs-code",level:4},{value:"Step 2: Install Miniconda",id:"step-2-install-miniconda",level:4},{value:"Step 3: Clone Necessary Repositories",id:"step-3-clone-necessary-repositories",level:4},{value:"Step 4: Install ImSwitch and Related Packages",id:"step-4-install-imswitch-and-related-packages",level:4},{value:"Step 5: Install Camera Drivers",id:"step-5-install-camera-drivers",level:4},{value:"Step 6: Clone ImSwitch Configuration and Set Permissions",id:"step-6-clone-imswitch-configuration-and-set-permissions",level:4}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"imswitch-installation-ubuntu"},"ImSwitch Installation Ubuntu"),(0,i.kt)("h4",{id:"step-1-install-visual-studio-code-vs-code"},"Step 1: Install Visual Studio Code (VS Code)"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open a web browser and navigate to the ",(0,i.kt)("a",{parentName:"li",href:"https://code.visualstudio.com/docs/?dv=linux64_deb"},"VS Code download page"),"."),(0,i.kt)("li",{parentName:"ol"},"Download the Debian package for your 64-bit system."),(0,i.kt)("li",{parentName:"ol"},"Once downloaded, open a terminal window and navigate to the directory where the ",(0,i.kt)("inlineCode",{parentName:"li"},".deb")," file is located."),(0,i.kt)("li",{parentName:"ol"},"Run the following command to install VS Code:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dpkg -i <filename>.deb\nsudo apt-get install -f\n")))),(0,i.kt)("h4",{id:"step-2-install-miniconda"},"Step 2: Install Miniconda"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open a terminal window and run the following command to download Miniconda:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://repo.anaconda.com/miniconda/Miniconda3-py310_23.5.2-0-Linux-x86_64.sh\n"))),(0,i.kt)("li",{parentName:"ol"},"Make the script executable and run it:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bash Miniconda3-py310_23.5.2-0-Linux-x86_64.sh\n"))),(0,i.kt)("li",{parentName:"ol"},"Follow the on-screen instructions to complete the installation."),(0,i.kt)("li",{parentName:"ol"},"Create a new environment named ",(0,i.kt)("inlineCode",{parentName:"li"},"imswitch")," with Python 3.10:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"conda create -n imswitch python=3.10 -y\n")))),(0,i.kt)("h4",{id:"step-3-clone-necessary-repositories"},"Step 3: Clone Necessary Repositories"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Navigate to the Downloads directory:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/Downloads\n"))),(0,i.kt)("li",{parentName:"ol"},"Clone the required repositories:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/openUC2/UC2-REST\ngit clone https://github.com/openUC2/ImSwitch\ngit clone https://gitlab.com/bionanoimaging/nanoimagingpack\n")))),(0,i.kt)("h4",{id:"step-4-install-imswitch-and-related-packages"},"Step 4: Install ImSwitch and Related Packages"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Activate the ",(0,i.kt)("inlineCode",{parentName:"li"},"imswitch")," environment:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"conda activate imswitch\n"))),(0,i.kt)("li",{parentName:"ol"},"Navigate to the ImSwitch directory and install it:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/Downloads/imswitch\npip install -e .\n"))),(0,i.kt)("li",{parentName:"ol"},"Repeat for UC2-REST and nanoimagingpack:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/Downloads/UC2-REST\npip install -e .\ncd ~/Downloads/nanoimagingpack  # Correcting typo from original logs\npip install -e .\n")))),(0,i.kt)("h4",{id:"step-5-install-camera-drivers"},"Step 5: Install Camera Drivers"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Clone the camera drivers:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/Downloads\ngit clone https://github.com/hongquanli/octopi-research/\n"))),(0,i.kt)("li",{parentName:"ol"},"Navigate to the camera drivers directory and run the installation script:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd octopi-research/software/drivers\\ and\\ libraries/daheng\\ camera/Galaxy_Linux-x86_Gige-U3_32bits-64bits_1.2.1911.9122/\n./Galaxy_camera.run\n")))),(0,i.kt)("h4",{id:"step-6-clone-imswitch-configuration-and-set-permissions"},"Step 6: Clone ImSwitch Configuration and Set Permissions"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Navigate to the Documents directory:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/Documents\n"))),(0,i.kt)("li",{parentName:"ol"},"Clone the ImSwitch configuration:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/openUC2/ImSwitchConfig\n"))),(0,i.kt)("li",{parentName:"ol"},"Change the ownership of the device:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chown pi:pi /dev/ttyUSB0\n")))),(0,i.kt)("p",null,"Congratulations! You have successfully installed ImSwitch and related dependencies."))}m.isMDXComponent=!0}}]);